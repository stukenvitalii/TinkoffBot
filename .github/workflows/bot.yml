name: Bot Build

on:
  workflow_dispatch:
  pull_request:
    paths:
      - .github/workflows/bot.yml
      - bot/**
  push:
    branches:
      - hw10
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: stukenvitalii/TinkoffBot/bot
jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    permissions:
      packages: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: maven build
        run: mvn -pl bot -am package

      - id: jacoco
        uses: madrapps/jacoco-report@v1.6.1
        if: ( github.event_name != 'workflow_dispatch' )
        with:
          paths: ${{ github.workspace }}/bot/target/site/jacoco/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 30
          min-coverage-changed-files: 30
          title: Code Coverage
          update-comment: true
      - name: Docker image build
        run: docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} -f ${{ github.workspace }}/bot/bot.Dockerfile ${{ github.workspace }}/bot

      - name: Log in to the Container registry
        if: github.ref == 'refs/heads/hw10'
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
              with:
                images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Docker image push
        if: github.ref == 'refs/heads/hw10'
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  checkstyle:
    name: checkstyle
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - run: mvn -pl bot -am checkstyle:check

  integration-test:
    name: integration tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - run: mvn -pl bot -am verify -Dskip.unit.tests=true
